<launch>
  <arg name="world_file" default="$my.world"/>
  <arg name="gui" default="false"/>


  <!--BEGIN turtlebot_gazebo turtlebot_world.launch -->


    <!--BEGIN gazebo_ros empty_world.launch-->
      <!-- these are the arguments you can pass this launch file, for example paused:=true -->
      <arg name="paused" default="false"/>
      <arg name="use_sim_time" default="true"/>
      <arg name="extra_gazebo_args" default=""/>
      <arg name="recording" default="false"/>
      <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
           rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
           launch files, but it does nothing. -->
      <arg name="headless" default="false"/>
      <arg name="debug" default="false"/>
      <arg name="physics" default="ode"/>
      <arg name="verbose" default="false"/>
      <arg name="respawn_gazebo" default="false"/>
      <arg name="use_clock_frequency" default="false"/>
      <arg name="pub_clock_frequency" default="100"/>

      <!-- set use_sim_time flag -->
      <group if="$(arg use_sim_time)">
        <param name="/use_sim_time" value="true" />
      </group>

      <!-- set command arguments -->
      <arg unless="$(arg paused)" name="command_arg1" value=""/>
      <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
      <arg unless="$(arg recording)" name="command_arg2" value=""/>
      <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
      <arg unless="$(arg verbose)" name="command_arg3" value=""/>
      <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
      <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
      <arg     if="$(arg debug)" name="script_type" value="debug"/>

      <!-- start gazebo server-->
      <group if="$(arg use_clock_frequency)">
        <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
      </group>
      <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	    args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_file)" required="true">
	      <remap from="map" to="ground_truth_map"/>
	    </node>
	
      <!-- start gazebo client -->
      <group if="$(arg gui)">
        <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
      </group>

    <!--END gazebo_ros empty_world.launch-->

    <!--BEGIN turtlebot_gazebo kobuki.launch.xml-->
      <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot3_description)/urdf/turtlebot3_waffle_pi.urdf.xacro'" />
      <param name="robot_description" command="$(arg urdf_file)" />
      
      <!-- Gazebo model spawner -->
      <node name="spawn_turtlebot3_model" pkg="gazebo_ros" type="spawn_model"
            args="-x 0 -y 0 -unpause -urdf -param robot_description -model mobile_base"/>
      
    <!--END turtlebot_gazebo kobuki.launch.xml-->

  
  
</launch>   
